name: Pytest for Ubuntu / macOS latest

on:
    push:
    schedule:
        - cron: "0 2 * * 1" # The task runs at 2 a.m. every Monday.

jobs:
    get-python-versions:
        runs-on: ubuntu-latest
        outputs:
            versions: ${{ steps.get-versions.outputs.versions }}
        steps:
            - name: Fetch maintained Python versions
              id: get-versions
              run: |
                  #   Maintained Python versions (excluding the latest version)
                  PYTHON_VERSIONS=$(grep -e "<tr" -e "<td" tmp_python.html | grep -v "Branch" |
                      paste - - - - - - |
                      grep -v -e "feature" -e "end-of-life" |
                      sed 1d |
                      cut -f 1 |
                      sed "s|^.*<p>||" |
                      sed "s|</p>.*$||")
                  #   Convert as a JSON array
                  PYTHON_VERSIONS=$(echo "$PYTHON_VERSIONS" | jq -R -s -c 'split(" ")')
                  #  Cache the Python versions
                  echo "versions=$PYTHON_VERSIONS" >> "$GITHUB_OUTPUT"

    build:
        needs: get-python-versions
        runs-on: ${{ matrix.os }}
        strategy:
            max-parallel: 10
            matrix:
                os: [ubuntu-latest, macos-latest]
                python-version: ${{ fromJson(needs.get-python-versions.outputs.versions) }}
        name: Python ${{ matrix.python-version }} on ${{ matrix.os }}

        defaults:
            run:
                shell: bash -l {0}

        steps:
            - uses: actions/checkout@v4
            - uses: conda-incubator/setup-miniconda@v3
              with:
                  python-version: ${{ matrix.python-version }}
                  miniconda-version: "latest"
                  activate-environment: test-env
                  channels: bioconda, conda-forge, defaults

            - name: Setup conda environment
              run: |
                  conda create -y -n env-dajin2 python=${{ matrix.python-version }} pip pytest
            - name: Execute tests
              env:
                  PYTHONPATH: src
              run: |
                  conda activate env-dajin2
                  # Use pip because conda does not support pyproject.toml.
                  pip install -e .
                  pytest tests/ -p no:warnings -vv
