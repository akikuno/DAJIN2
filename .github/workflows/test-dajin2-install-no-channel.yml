name: Test DAJIN2 installation without channel config

on:
  push:
  schedule:
    - cron: "0 2 * * 1"  # 毎週月曜の午前2時 (UTC) に実行

jobs:
  get-python-versions:
    runs-on: ubuntu-latest
    outputs:
      versions: ${{ steps.get-versions.outputs.versions }}

    steps:
      - name: Get supported Python versions
        id: get-versions
        run: |
          # === 1. Python公式で保守中のバージョンを取得 ===
          curl -s https://devguide.python.org/versions/ \
            | grep -e "<tr" -e "<td" \
            | grep -v "Branch" \
            | paste - - - - - - \
            | grep -v -e "feature" -e "end-of-life" \
            | sed 1d \
            | cut -f1 \
            | sed -e 's|^.*<p>||' -e 's|</p>.*$||' \
            | sort -u > python-versions.txt

          # === 2. mappy がビルド対応しているバージョン ===
          conda search -c bioconda mappy \
            | grep -o 'py[0-9]\{2,3\}' \
            | sed 's/^py//' \
            | awk '{print substr($0,1,1) "." substr($0,2)}' \
            | sort -u > mappy.txt

          # === 3. pysam がビルド対応しているバージョン ===
          conda search -c bioconda pysam \
            | grep -o 'py[0-9]\{2,3\}' \
            | sed 's/^py//' \
            | awk '{print substr($0,1,1) "." substr($0,2)}' \
            | sort -u > pysam.txt

          # === 4. 共通バージョン (mappy ∩ pysam) ∩ 保守バージョン ===
          PYTHON_VERSIONS=$(join mappy.txt pysam.txt | join - python-versions.txt)

          # JSON配列に変換（改行→空白→配列化）
          PYTHON_VERSIONS=$(echo "$PYTHON_VERSIONS" | tr '\n' ' ' | jq -R -s -c 'split(" ") | map(select(length > 0))')

          # 出力に設定
          echo "versions=$PYTHON_VERSIONS" >> "$GITHUB_OUTPUT"
          echo "versions=$PYTHON_VERSIONS"

  test-dajin2-install:
    needs: get-python-versions
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ${{ fromJson(needs.get-python-versions.outputs.versions) }}
    name: Python ${{ matrix.python-version }} on ${{ matrix.os }}

    defaults:
      run:
        shell: bash -l {0}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          python-version: ${{ matrix.python-version }}
          auto-activate-base: true
          miniconda-version: "latest"

      - name: Install and test DAJIN2 from Bioconda
        run: |
          conda install -c conda-forge -c bioconda DAJIN2
          DAJIN2 --version
